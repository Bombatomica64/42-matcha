name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: matcha_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: Back-End/package-lock.json

    - name: Install dependencies
      working-directory: ./Back-End
      run: npm ci

    - name: Wait for Postgres
      run: |
        for i in {1..30}; do
          pg_isready -h localhost -U postgres && break
          sleep 2
        done

    - name: Setup test database schema
      working-directory: ./Back-End
      env:
        PGPASSWORD: postgres
      run: |
        psql -h localhost -U postgres -d matcha_test -f ../../Db/init.sql
        # Add more .sql files if needed, e.g. notification.sql

    - name: Run linting
      working-directory: ./Back-End
      run: npm run lint

    - name: Run tests
      working-directory: ./Back-End
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: matcha_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        JWT_SECRET: test-jwt-secret-for-ci
        JWT_REFRESH_SECRET: test-refresh-secret-for-ci
        CORS_ORIGIN: http://localhost:4200
        API_URL: http://localhost:3001
        EMAIL_HOST: localhost
        EMAIL_PORT: 587
        EMAIL_USER: test@example.com
        EMAIL_PASSWORD: test-password
        EMAIL_FROM: noreply@matcha-test.com
        UPLOAD_DIR: uploads/test
        MAX_FILE_SIZE: 5242880
      run: npm run test:ci

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./Back-End/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false