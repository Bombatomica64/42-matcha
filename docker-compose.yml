services:
  backend:
    build:
      context: ./Back-End
      dockerfile: Dockerfile
    env_file:
      - ./Back-End/.env
    volumes:
      - uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - traefik
    expose:
      - "3000"

  # frontend:
  #   build:
  #     context: ./Front-End
  #     dockerfile: Dockerfile
  #   networks:
  #     - traefik
  #   expose:
  #     - "80"

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token "${CLOUDFLARE_TOKEN}"
    env_file:
      - .env
    depends_on:
      - traefik
    networks:
      - traefik
    restart: unless-stopped


  traefik:
    build:
      context: ./Traefik
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./Traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    networks:
      - traefik

  db:
    build:
      context: ./Db
      dockerfile: Dockerfile
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - traefik
    env_file:
      - ./Db/.env
    ports:
      - "5432:5432"

networks:
  traefik:
    driver: bridge

volumes:
  db_data:
    driver: local
  uploads:
    driver: local