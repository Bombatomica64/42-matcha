 :host {
	 display: flex;
	 flex-direction: column;
	 flex: 1 1 auto;
	 min-height: 0; // allow descendants with overflow to scroll
	 width: 100%;
 }

.chat-layout {
	display: flex;
	flex-direction: column;
	flex: 1 1 auto;
	min-height: 0;
	width: 100%;
}

 .chat-main {
	 flex: 1 1 auto;
	 display: flex;
	 flex-direction: column;
	 min-height: 0;
	 padding: 0;
 }

 .chat-messages {
	 flex: 1 1 auto;
	 min-height: 0;
	 display: flex;
	 flex-direction: column;
	 overflow: hidden; // virtual scroller handles its internal scroll
 }

 .chat-scroller {
	 flex: 1 1 auto;
	 min-height: 0;
	 width: 100%;
	 // no explicit height:100%; let flex distribute space
 }

 .chat-scroller .p-virtualscroller-content {
	 display: flex;
	 flex-direction: column;
	 /* Remove flex gap so itemSize reflects real height; spacing via item bottom padding */
	 padding: 1rem 1rem .25rem;
 }

.chat-beam-full, .chat-beam-full > .om-border-beam-wrapper, .chat-beam-full > .om-border-beam-wrapper > .om-border-beam {
	height: 100%;
	display: flex;
	flex: 1 1 auto;
}

 .no-messages { padding: 1rem; opacity: 0.7; font-size: 0.9rem; }

 .composer {
	 margin: 0;
	 padding: 0.75rem 0.75rem 1rem;
	 background: transparent;
	 flex-shrink: 0;
 }

 .composer-group { width: 100%; display: flex; }
 .composer-input { width: 100%; }
 .composer-send { cursor: pointer; }
 .composer-send[disabled] { opacity: 0.4; cursor: not-allowed; }

/* New float label based layout */
.composer-inner { display: flex; gap: .5rem; align-items: flex-end; }
.composer-field { flex: 1 1 auto; }
.composer-field :is(input) { width: 100%; }

